2004-01-20  Petasis George  <petasis@iit.demokritos.gr>
        * win/OleDND.cpp:
        * win/tkOleDND.cpp: Fixes by Vince Darley in
        TkDND_GetCurrentTypeCode & the FileGroupDescriptorW type handling.
        
2004-01-17  Petasis George  <petasis@iit.demokritos.gr>
        * lib/pkgIndex.tcl: Updated code to use the version variable.
        Also, tkdnd is now able to load binaries categorised in directories,
        according to the operating system.

2004-01-15  Petasis George  <petasis@iit.demokritos.gr>
        * win/tkOleDND.cpp: Fixed a bug reported by Vince Darley.
        TkDND_GetSourceActions reported only one action under windows, instead
        of the complete action list the dnd source supported.

2004-01-12  Petasis George  <petasis@iit.demokritos.gr>
        * win/OleDND.h:
        * win/OleDND.cpp:
        * demo/dnddemo.tcl: Added support for %D in all event bindings for the
        windows implementation of tkdnd. (Up to now, only the <Drop> event had
        proper support for the %D substitution code). Bug reported by Vince
        Darley. Also, the main demo was updated to display the data to be
        dropped during all events.

2003-12-10  Jeff Hobbs  <jeffh@ActiveState.com>

	* Makefile.in:      updated to TEA3 spec
	* configure:
	* configure.in:
	* tclconfig/tcl.m4:

	* generic/tkDND.h: recognize 8.5 and updated tclconfig defines

	* win/OleDND.cpp: correct to ifdef for 8.5 API in Tk_Photo calls

2003-11-17  Petasis George  <petasis@iit.demokritos.gr>
	* win/OleDND.h:
	* win/OleDND.cpp:
	* win/tkOleDND.cpp: A new windows-specific code was
	added (FilesWithContent) which allows the handling of the
	FileGroupDescriptor(W)? type.

	* win/tkdnd.sln:
	* win/tkdnd.vcproj: Updated project files for VC .NET.

	* win/VC-6.0: Created a new directory for the VC++ 6 project files.

2003-11-16  Petasis George  <petasis@iit.demokritos.gr>
	* win/OleDND.h:
	* win/OleDND.cpp:
	Initial support for the windows FileGroupDescriptor format. This is
	a special clipboard format for exchanging files that do not exist
	physically in the file system, but "live" inside other applications.
	(For example e-mails from Outlook or files in zip files).
	However, no changes have been made at the Tcl level, as the contents
	of these files must be returned along with their file names. As a
	result, this clipboard format type must be handled in a special way,
	which has not yet been decided.
	
2003-10-21  Petasis George  <petasis@iit.demokritos.gr>
	* unix/XDND.c: Bug fix in XDND_SendDNDStatus: [patch ]
	
	* generic/tkDNDBind.c:
	* unix/tkXDND.c: Fixes related to the CONSTification of Tk_GetAtomName.

2002-05-19  Petasis George  <petasis@iit.demokritos.gr>
	* generic/tkDND.h:
	* generic/tkDND.c:
	* generic/tkDNDBind.c:
	* win/OleDND.h:
	* win/OleDND.cpp:
	* win/tkOleDND.cpp: 
	* unix/tkXDND.h:
	* unix/tkXDND.c: Changed parameters of TkDND_GetDataAccordingToType
	and TkDND_CreateDataObjAccordingToType, so as to correctly handle
	wildcard types and cross-platform types. Fixed the bug of the missing
	last character in XDND file drops. Platform-specific types and
	cross-platform ones no can better interact, as various bugs regarding
	the selection of the most suitable type have been resolved.

	* Makefile.in: A few changes in the contents of pkgIndex.tcl to
	account also for windows dlls.

2002-05-18  Petasis George  <petasis@iit.demokritos.gr>
        * demo/WinDemo.tcl:
	* demo/CrossPlatformDemo.tcl: A new demo has been created that mimics
	WindDemo.tcl, but uses the cross-platform type names. Also, the
	WinDemo.tcl was enchanced to support image drags/drops. Fianlly, some
	cosmetic changes were done.

	* win/tkOleDND.cpp:
	* win/OleDND.cpp: Added support for CF_DIB drags. The user can now
	specify the type "Image" or "CF_DIB" for transferring images. What he
	must provide, is the name of a Tk image. Tkdnd will automatically
	convert a Tk image into an 24-bit uncompressed DIB, which will be
	understood by almost any image handling program (Word, wordpad).
	If the user gives us data other than an image name (i.e. raw image
	data), the data are transferred unchanged during drop.

2002-05-17  Petasis George  <petasis@iit.demokritos.gr>
	* win/OleDND.cpp: Added support for image drops (type CF_DIB). When an
	CF_DIB is dropped, tkdnd instead of returning the raw data as a bmp
	(thus requiring Img package to re-create the image) creates an image and
	returns the image name. The caller can get the raw data with image
	get.

	* win/OleDND.cpp: Fixed lock-up created by the i18n fix [Patch #553069].

2002-05-15  Petasis George  <petasis@iit.demokritos.gr>
        * demo/SimpleDropTarget.tcl:
	* demo/newtest.tcl:
	* demo/WinDemo.tcl:
	* demo/tutorial1.tcl:
	* demo/dndSpy.tcl:
	* demo/tutorial2.tcl:
	* demo/dnddemo.tcl: updated demos to work even if the package has not
	been installed yet (i.e. executing "make" test just after "make").

        * tests/all.tcl: Added a file needed by the new configuration ("make
	test"). It simply executes all the demos sequentially :-)

2002-05-06  Jeff Hobbs  <jeffh@ActiveState.com>

	* win/OleDND.cpp:
	* win/P_OleDND.cpp: i18n fixes for Windows filename translation.
	[Patch #553069] (satoshi imai)

2002-05-03  Jeff Hobbs  <jeffh@ActiveState.com>

	* generic/tkDND.c (TkDND_ExecuteBinding): don't require Tcl
	ConvertToBinary, instead try Tcl_GetByteArrayFromObj in C.

	* unix/tkXDND.c (TkDND_SetCursor): aborted running callback in a
	null interp.
	Correct source code to conform better to Tcl style guide.

	* unix/XDND.h: check to see if LONG_MAX is not already defined

	* generic/tkDND.c:
	* generic/tkDND.h:
	* unix/tkXDND.c:
	* unix/Shape/shape.c:
	* win/OleDND.cpp:
	* win/tkOleDND.cpp: updated to handle 8.4 const changes.

	* Build.tcl (removed): Replaced old build system with new TEA 2002
	* Makefile.in (new):   specification.  This works on Windows and
	* aclocal.m4 (new):    Unix and simplifies the build setup.
	* configure (new):
	* configure.in (new):
	* tclconfig/README.txt (new):
	* tclconfig/install-sh (new):
	* tclconfig/tcl.m4 (new):
	* unix/Makefile.in (removed):
	* unix/aclocal.m4 (removed):
	* unix/configure (removed):
	* unix/configure.in (removed):
	* unix/install-sh (removed):
	* unix/mkIndex.tcl.in (removed):
	* unix/mkinstalldirs (removed):
	* unix/pkgIndex.tcl (removed):
	* unix/tcl-conf (removed):
	* unix/tcl.m4 (removed):
	* library/tkdnd.tcl (new):
	* lib/tkdnd/libtkdnd.dll (removed): Removed pre-built binary dlls.
	* lib/tkdnd/pkgIndex.tcl (removed):
	* lib/tkdnd/tkDND_Utils.tcl (removed): 

2002-04-11  Petasis George  <petasis@iit.demokritos.gr>

	* unix/tkXDND.c:
	* unix/XDND.c:
	* generic/tkDNDBind.c:
	* generic/tkDND.h:
	* generic/tkDND.c: Added support for wildcards in types. The demo
	"dndSpy.tcl" runs unmodified under unix now. Of course this
	feature is not supported under Motif: using it simply registers
	"*" as type...

2002-04-10  Petasis George  <petasis@iit.demokritos.gr>

	* win/OleDND.h:
	* win/OleDND.cpp:
	* win/tkOleDND.h:
	* generic/tkDNDBind.c:
	* generic/tkDND.h:
	* generic/tkDND.c:
	* demo/dndSpy.tcl: Added support for wildcards in types. Now the
	caller can register types like "text/*" or even "*", following the
	same rules as 'string match'. This may be useful in many cases,
	like for viewing the exported types when doing a drag from an
	application. Added a new demo - dndSpy.tcl - in the demo directory
	that does exactly this.
  
	* win/OleDND.h:
	* win/OleDND.cpp: Added support for IDropTargetHelper: This helper
	draws the bitmal icon stored by the drag source (if any) near the
	drag cursor. In order to enable this support,
	DND_ENABLE_DROP_TARGET_HELPER should be defined during
	compilation. The only thing I am not sure about this is including
	<atlbase.h>, which unfortunatelly is needed. Perhaps when not
	using visual studio, this file may not be available. In this case,
	not defining DND_ENABLE_DROP_TARGET_HELPER will not require it...

  Various bug fixes, including:
    - Error reporting when executing the <Drop> event script.
    - Correct selection of the drop action when no script is available. (This
      fixed also the bug when dropping URLs from IE which are exported with
      only one action, "link").

2002-01-17  Jeff Hobbs  <jeffh@ActiveState.com>

	* demo/SimpleDropTarget.tcl:
	* demo/WinDemo.tcl:
	* demo/dnddemo.tcl:
	* demo/newtest.tcl:
	* demo/tutorial1.tcl:
	* demo/tutorial2.tcl: updated demos with better Tk version check.

	* generic/tkDND.c:
	* generic/tkDND.h: added tkPlatDecls.h include

	* win/makefile.vc: simple win makefile

	* lib/tkdnd/pkgIndex.tcl: let the dll do the version check

	* generic/tkDNDBind.c:
	* generic/tkDND.c: code reformatting and cleanup

	* generic/tkDND.h: added use of tkPlatDecls.h for Tk_GetHWND decl
	and cleaned up header usage.

	* Install.txt:
	* Readme.txt: minor corrections

2001-15-06 Petasis George   <petasis@iit.demokritos.gr>
  Unix:
    Support for the tcl/tk 8.3.3 release, where Tk_CreateClientMessageHandler
    has been inserted in tk core. 
    (After suggestion from Mike Clarkson <support@internetdiscovery.com>)

2001-02-04 Petasis George   <petasis@iit.demokritos.gr>
  Windows:
    Initial Bitmap drop support. Able to receive image of objects from word.
    Dragging images from tk to other windows apps not functional.
    New cross-platform types: Text, Files, Image.

2001-02-04 Petasis George   <petasis@iit.demokritos.gr>
  Windows:
    Full utf-8 support!

2000-14-12 Petasis George   <petasis@iit.demokritos.gr>
  Various bugs reported by Colin McDonald <mcdonald@boscombe.demon.co.uk>:
	* Fixed in unix/tkXDND.c: TkDND_WidgetApplyEnter
      typelist always updated from dnd->DraggerTypeList
	* Fixed in unix/tkXDND.c: TkDND_WidgetInsertDrop
    This will not compile with the Sun Solaris Workshop C compiler,
    because it complains about a "non-constant initializer".
        Atom typelist[2] = {type, 0};
    to:
        Atom typelist[2] = {0, 0};
        typelist[0] = type;
	* Fixed in generic/tkDNDBind.c: TkDND_FindScript
    Not checking for a NULL typelist pointer before doing loop through
    typelist to find match. A null typelist is passed by TkDND_WidgetApplyLeave.
	* Fixed in lib/tkdnd/tclIndex.tcl:
    When pkgIndex.tcl file is sourced, it will always load the tkdnd package,
    even if the application has not done "package require tkdnd".
	* Fixed unix/Makefile.in:
    -Wall (gcc specific option) removed.
  
2000-04-12 Petasis George   <petasis@iit.demokritos.gr>
  Windows, unix & generic:
  Removed the first argument (TkWindow) from TkDND_FindMatchingScript, as it
  was not used at all.

2000-24-11 Petasis George   <petasis@iit.demokritos.gr>
  Tkdnd seems to work ok with KDE 2.0 under solaris. The bug of crashing when
  dropping text into KDE texts editors when selected text existed now fixed.
  Actually, it was a silly one, of executing a binding over a NULL interp
  pointer :-)

2000-14-08 Petasis George   <petasis@iit.demokritos.gr>
  Support from dropping from Star Office revisited.
  The reason was that I installed KDE 2 RC2 and I was able to test with the
  new KDE! Corrected a bug TkDND_CreateDataObjAccordingToType, where we missed
  a character while searching for list seperation characters for
  "text/uri-list" type. We are able to drop and receive files into/from
  Konqueror (KDE file manager) and UTF-8 strings in KDE 2 normal and advanced
  editors. (Greek characters were passed and displayed ok...)
  Couldn't find an application that accepts images in order to try
  image transfers (pixie didn't seem to accept drops at all...)
  Regarding GNOME, we are not able to receive any file drops. Some attempts
  also caused gmc (GNOME filemanager) to crash. But gmc was able to receive
  files from tk, and with the correct action (ask). It is nice to drop image
  filenames from tk into GIMP :-). Gnotepad was also not able to receive
  textual data, nor it exports anything... On the other hand, gnome-terminal
  is able to receive text (of type "text/plain") from tk, without any problem
  at all. So, what's happening? Probably it is not our implementation of the
  protocol, but the fact that gmc waits something more special regarding
  filenames? But droping into gmc filenames works...
  Regarding StarOffice, we are able to get filenames from it, and also it
  accepts filenames from tk, although it doesn't seem to do anything with
  them. And finally, we accept text/plain and text/uri-list from Netscape.
  That is the current unix state of tkdnd...
  
2000-11-08 Petasis George   <petasis@iit.demokritos.gr>
  Added support for dropping from Star Office under Linux.
  Under Solaris?

2000-10-04 Riesterer Laurent   <laurent.riesterer@free.fr>
  Added extended binding features to Windows. Now the Windows
  version detects the use of modifiers or buttons and search
  for the most appropriate bindings given the current state.

2000-09-01 Petasis George   <petasis@iit.demokritos.gr>
  The CVS server updated wrongly (mainly because I didn't know
  how to use CVS :-)). Second try to import everything from the begining...

2000-08-31 Petasis George   <petasis@iit.demokritos.gr>
  Updated Ajuba's CVS server with the most recent version &
  announcment on c.l.t
  
2000-08-30 Petasis George   <petasis@iit.demokritos.gr>
  Windows:
  Full action support (finally)!
  Now, both windows & unix versions have exactly the same
  interfaces and more important *functionalities*!
  The only known limitation under windows is changing types
  according to modifiers, but this is a quite advanced feature,
  and Laurent is more appropriate for doing it, as he wrote the 
  unix side...

2000-08-29 Petasis George   <petasis@iit.demokritos.gr>
  Windows:
  Initial support for <Drag> <DragLeave> and <Drop>...
  
2000-08-28 Petasis George   <petasis@iit.demokritos.gr>
  Windows:
  Tried for supporting <DragEnter> on drop targets.
  I have to ask Laurent about the "advanced" bindings...

2000-08-27 Petasis George   <petasis@iit.demokritos.gr>
  Unix:
  Corrected a bug concerning cancelation from ask dialog.
  Windows:
  Started reimplementation of the whole code.
  Drag source side is finished. We have modifier, action and cursor window
  support... Manged to drop "text/plain" into word...
  
2000-08-25 Petasis George   <petasis@iit.demokritos.gr>
  Unix:
  Completed implementation of Cursor window. Now there is also a callback to
  update this window. Documentation and the "dnddemo.tcl" updated to reflect
  the changes.
  The windows side does not compile, as the needed changes are not yet done.
  
2000-08-24 Petasis George   <petasis@iit.demokritos.gr>
  Updated install procedure according to suggestions from ...
  Package renamed to "tkdnd".
  Unix:
  Initial implementation of Cursor window.

2000-07-19 Petasis George   <petasis@iit.demokritos.gr>
  tkDND was added to cvs server and I was given write access to it as
  maintainer.

2000-07-17  Jeff Hobbs  <hobbs@scriptics.com>
	* src: Changed 'src' to 'generic' (updated files using) 'src' to
  make it more like a standard extension directory configuration.

2000-07-14 Petasis George   <petasis@iit.demokritos.gr>
  Request to tcl core team for adding extension to the cvs server.
  
2000-07-13 Petasis George   <petasis@iit.demokritos.gr>
  Unix: 
  Fixed a bug regarding the following situation:
  During a drag operation from a foreign application and during
  the <DragLeave> event handling, there is the possibility of handling
  another ClientMessage event before the function that handled <DragLeave>
  has finished. Then we reset all values in the dnd structure (as a drag leave
  means dnd cancelation) and we loose information got from the new
  ClientMessages. Note that the user need not place an "update" command to
  have this effect, as we simulate one after each tcl callback execution.
  Windows:
  Minor formatting updates.
  Verified compilation using the provided VC++ 5 project files.
  There are still some problems with it.
  
2000-07-12 Petasis George   <petasis@iit.demokritos.gr>
  Unix:
  Incorporated and updated (major re-formating :-)) code from Laurent.
  Fixed a new bug introduced, regarding dropping on widgets that didn't had 
  other bindings than for the <Drop> event.
  
2000-07-09 Petasis George   <petasis@iit.demokritos.gr>
  Unix:
  Corrected a bug when dropping multiple files from Qt and Motif, where a
  valid tcl list was not created. A bug still remains when dropping multiple
  files from GNOME, where 2 special characters are appended. I have to leave
  it for now, as I don't know anything about the specifications used...
  I now suspect (well almost sure :-)) that we have to simulate this things
  when dragging files from tk...

2000-07-09 Riesterer Laurent   <laurent.riesterer@free.fr>
  Unix:
  Various bug fixes when delaing with <Drag> event.
  Bug fix: the code for KeyRelease didn't use the mask properly. Now the
	   modifiers are handled correctly.
  Bug fix: the priority was not correctly handled when inserting a new type
	   in the list (TkDND_AddHandler). Should start with head->next as
	   first item of the list, else the result is random.
  Windows:
  Added logging facilities (with Unix compatibility).
  First integration of advanced bindings features: the scripts work as before,
  but the extension need some work to handle complex queries (in Unix, the list
  of type is given to find the best matching script, whereas in Windows, the
  type is found at the beginning... I will try to construct a list of types
  and use this list instead of just a pre-computed type).
  Correction of a bug in TkDND_GetDataAccordingToType: the final zero was
  not properly set in the case of binary data. If those were interpreted as
  string (like in TK_COLOR), the result was random ...
  Doc:
  Updated the doc the reflect the changes.

2000-07-06 Riesterer Laurent   <laurent.riesterer@free.fr>
  Unix:
  Merged the advanced bindings features into the code. Now the bindings can
  be constructed as in Tk using modifiers and buttons to match specific events.
  The algorithm to match to script to execute is similar to Tk: try to find the
  more specific first, then try to find the closest one.
  Demo:
  Added two small tutorials to illustrate the use of complex bindings.
  Doc:
  Updated the doc the reflect the changes.
  
2000-06-25 Petasis George   <petasis@iit.demokritos.gr>
  Windows:
  Tryed to update the windows code. Code now compiles. There are problems
  regarding the transfer of utf-8 strings. I tryed to transfer them as unicode
  (under the type CF_UNICODETEXT) but it was not succesfull. Also, "advanced"
  features like actions (!), modifiers & mouse buttons not working right now.
  Finnaly, my impression is that the ask action is not supported by the OS.
  Probably I need  help on this, as my windows specific knowledge is
  minimal:-) Any volunteers?
  
2000-06-24 Petasis George   <petasis@iit.demokritos.gr>
  Unix:
  Incorporated recent changes from Laurent Riesterer. Those included the
  use of modifier keys, and the way to be reported to tcl scripts. I extended
  it, in order a key press/release to simulate a mouse move, so as to be able
  to change the current action. Also, now the <Escape> button cancels the
  whole drag incident. Also, now the Alt keys are reported as "Alt" and not as
  "Mod?"...
  
2000-06-21 Petasis George   <petasis@iit.demokritos.gr>
  Unix:
  Incorporated changes from Laurent Riesterer (laurent.riesterer@free.fr).
  He was kind enough to read all sources and find bugs relating TCL_RETURN.
  Initial Motif drag support: we are able to locate motif enabled windows,
  and to send DND_TOP_LEVEL_ENTER/DND_TOP_LEVEL_LEAVE to them. Now we have to
  deal with the drag part :-)
  
2000-06-19 Petasis George   <petasis@iit.demokritos.gr>
  Unix:
  I start looking at the "shape" extension from D.K. Fellows. It was easy
  to integrate it with the unix code, but I didn't like the fact that the
  shape cannot be specified with the transparency of an image. Only bitmaps
  were supported. So, it was not integrated in the demo...
  I finally corrected the bug of freeing many times the same type list.
  The error was that we changed the MsgWindow of the dnd struct before
  changing the dnd->MouseWindow and we have the nice effect of sending a
  ClientMessage regarding a foreign window into a toplevel of our application.
  Thanks God I found it, because I was in the process of keeping types for
  drags and drops in separate pointers...
  Now the unix side seems very stable.
  
2000-06-18 Petasis George   <petasis@iit.demokritos.gr>
  Documentation date:-) The documentation was updated to cover the most recent
  changes. The example section needs some improovements. A man page
  was written, formated as the standart tk man pages.

2000-06-16-17 Petasis George   <petasis@iit.demokritos.gr>
  Unix:
  Changed for one more time the way we identify the windows when we are
  dragging. Seems to be more stable now (at least I haven't seen a BadWindow
  XError, unless foreign application has crashed :-)).
  Doing a little testing, there remains one "known" bug. Sometimes we get a
  core dump, because we try to free already freed memory. The problem seems to
  be the dnd->DraggerTypeList, where is freed and allocated by many places.
  The cause is known and will be fixed (someday :-))
  The new way for identifying windows has introduced a new problem when we
  drag files from the "fileiconview" Qt demo. WHen the icon was over our
  text/uri-list drop widget in our demo, the drop was alternating between
  accept and refuse. Dragging from the window next to it (same app!) was
  working as expected. A small workaround (but difficult to find :-)) was done
  and the problem fixed.

  A new feature at the tcl level: the user can specify a priority when
  defining drag sources. This was done because Qt at least, thinks that the
  first type in the drag source type list is the most desired (well not quite
  resonable: the drop target is to accept the data, so the type that the drop
  will be happen should be based according to the priorities specified by the
  drop source (what format is able to understand better). That is also
  implied by the protocol: the source announces its supported types and the
  target chooses one of them). Anyway, we give the user the opportunity to
  arrange the types that the drag source support according to priorities.
  The source types are now announced according to their priorities.

  Finnaly the actions seem to work fine. If only all applications
  (name me Qt :-)) also declared the supported actions of their drag sources
  as we do... Anyway, now the tk scripts have enough information to deside
  upon actions: The available list of drag source actions can be get with %a
  and return one of them. If the given list is empty (typical to non-tk
  applications...), copy should be returned. Also, during ask action, if the
  script fails or none is returned, then we deliver a <DragLeave> to that
  widget, removing the need for the script that displays the select action
  dialog to reset the visual appearence of the widget.
  TODO: The windows side needs urgent update, as new functions are introduced
  and required.
  
2000-06-14   Petasis George   <petasis@iit.demokritos.gr>
  Unix:
  Fixed a bug where tk menus were activated during a drop from tk to other
  applications. I discover that Qt's dnddemo does not accept drops if the
  original requested action of the drag source is ask (!). Also, sometimes
  GTK applications crash with a message "assertion window!=NULL failed",
  and the tk application generates an X-error of invalid window. Seems fixed
  in newer versions of GTK.
  The unix side seems quite complete now. Only the mapping from mime-types to
  motif types is missing...
  
2000-06-13   Petasis George   <petasis@iit.demokritos.gr>
  Unix:
  All bugs (:-)) regarding actions now fixed.
  The ask action is properly shared among applications. All tk applications
  are able to display the action selection dialog. Implemented by a library
  call if the user has placed now binding over the <Ask> event...

2000-06-12   Petasis George   <petasis@iit.demokritos.gr>
  Unix:
  Started to fix action support. Now actions are correctly passed within the
  same application and among different applications.
  The ask action now is implemented but works within the same application.
  
2000-06-07   Petasis George   <petasis@iit.demokritos.gr>
  Unix:
  New tcl announced (8.4a1). No more needed patches for tk.
  TkDND can now be a true loadable extension.
  Fixed some bugs having to do with proxy windows, that finally were the cause
  for the various X-errors I had. Now the code works very stable under both
  Linux and Solaris. I think it is ready for public release.
  But the most important thing fro today was the Motif drop support!
  Tested with netscape under Linux and dtfile & dtpad under Solaris
  (part of CDE). I think that is also possible to support also Motif drops as
  well, where tk would automatically switch protocols according to what
  supported by the window beneath the cursor. That will be a very special
  feature, as I don't know of any toolkit that supports both of them.
  Just to find the time :-)
  
2000-06-06   Petasis George   <petasis@iit.demokritos.gr>
  Unix:
  Changed the way that TkDND_WidgetInsertDrop evals the binding script.
  Now a list of objects is evaluated, with Tcl_EvalObjv, so as the data object
  given to the script to be a byte-array. No more problems with the Img
  extension, that tries to get binary data without converting objects into
  byte-arrays first...

2000-06-04   Petasis George   <petasis@iit.demokritos.gr>
  Unix:
  (00:03) Drop works for internal drops. For some reason drop does not work for
  external applications (i.e. Qt).
  (14:35) Drop works with other apps (mainly Qt 2.1).
  Trying to make extension TEA compliant...
  
2000-06-03   Petasis George   <petasis@iit.demokritos.gr>
  Unix:
  A few changes towards full tcl-error callback handling. Not finished.
  Continue working on drag code. Now XdndStatus messages are also received and
  processed. Cursor is updated according to the requested action.
  
2000-05-27   Petasis George   <petasis@iit.demokritos.gr>
  Unix:
  Starting to deal with Drag action. Now we are able to initialise a drag,
  and able to locate widgets that are XDND aware, to send XdndEnter and
  XdndPosition. Code seems to be stable enough, and behaves well with Qt and
  cooledit, of course up to the point where XdndPosition messages are
  delivered. With cooledit, it behaves even better than Qt.
  Note: There is a Bug(?) in handling this:
    If we start gmc (GNOME file manager), it sets a XDND proxy on the root
    window to a gmc window. If gmc gets killed, the root proxy remains, but
    points to a non-existent window!. We have to somewhat find that that window
    does not exist any more so as not to crash with an X error if we send
    messages to this...

2000-05-27   Petasis George   <petasis@iit.demokritos.gr>
  Unix:
  1) Getting X selection code improoved. For textual data, we use
  Tk_GetSelection while for other data, we have our own functions.
  Note that Tk_GetSelection fails even for textual data, like for
  "text/uri-list". When that happens, we give a second try with our
  alternative implementation that deals with no-contextual data. Drop files
  from Qt now works.
  Success in dropping xpm images from Qt.
  Partial success in droping png(!) images from Qt. Partial means that in the
  tcl code, I have to write the data in a file first, before giving it to the
  image command. This is something strange, and I am convised that is a bug of
  either tcl or the Img extension. (The img demo crashes in my system
  -img1.2.3/tk8.3.1- so probably img...):
  From the dnddemo.tcl:
    image/* {
  |   set f [open dndtt w]
  |   fconfigure $f -encoding binary -translation binary
  |   puts -nonewline $f $data
  |   close $f
      switch [string range $type 6 end] {
        xpm {image create pixmap itk -data $data}
        xbm {image create bitmap itk -data $data}
        default {image create photo itk -data $data}
      }
  If I remove the lines that write the file, then I get an error at "image
  create" for png images. The code that writes the file alters the data
  variable??? Maybe a post to c.l.t on Monday :-)
  2) Initial code for supporting also drag.
  
2000-05-26   Petasis George   <petasis@iit.demokritos.gr>
  Unix:
  Only Drop is supported right now. All bugs (:-)) have been found and fixed.
  Drop does not crash now. Code able to accept drops from Qt 2.1 and Paul
  Sheer's cooledit editor. That means that we have compatibility with Qt/KDE
  2.0 and the Paul Sheer's XDND implementation. Drop from GNOME does notwork,
  but that's maybe due to the installed version in my system...
  
2000-05-16   Petasis George   <petasis@iit.demokritos.gr>
  Windows implementation updated to conformed with the new directory
  structure. Dependencies on tk internal headers removed. The only
  function that was needed was Tk_GetHWND. This function although
  documented, is not defined through tk public api (as of version 8.3.1).
  Prototype for this function added in file src/tkDND.h. The drawback is
  that the dll must be linked against tk83.lib, even if stubs are used.
  
  Unix related files moved under unix directory.
  Demos moved in demo directory and updated to locate the shared object
  correctly.
  
2000-05-15   Petasis George   <petasis@iit.demokritos.gr>
  Updated directories to follow the TEA architecture.
  Common functions (or function differing in one or 2 function
  calls) have been gathered in src directory. The most importand 
  benefit is that the "dnd" object command is now common for all
  platform specific implementations, so the tcl behaviour is controlled
  from a single place (at last:-))
  All implementation from now on based to my XDND implementation as Paul
  Sheer's XDND implementation was droped due to license restritions...

2000-05-10   Petasis George   <petasis@iit.demokritos.gr>
  Initial announcement at comp.lang.tcl.
  This reliese was a prerelease.
  Web pages at http://www.iit.demokritos.gr/~petasis/tcl created.
  (Unix):
  The released version was a preview release based on initial, first
  implementation based on Paul Sheer's XDND implementation. This code although
  functional, has a GPL licence, incompatible with the licence I want to give
  to the tkDND package (BSD style). This code is the one released, just to
  offer a preview of the package to the tcl community. But it is already dead,
  as future implementation & releases won't be based on this code :-).
  Also existed an initial implementation written by me, based on John Lindal's
  sample implementation (in C++) that has a BSD license type.
  This code only supports drop of only textual data right now. It also crashes
  quite often :-) and sometimes causes Qt to crash as well :-).
