# installkit tests - content
#
# Copyright (C) 2024 Konstantin Kushnir <chpock@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# These tests check the expected content in installkit vfs

if { [lsearch [namespace children] ::tcltest] == -1 } {
    package require tcltest 2
    namespace import -force ::tcltest::*
}

testConstraint darwin [expr {[testConstraint unix] && $tcl_platform(os) eq "Darwin"}]
testConstraint notDarwin [expr {![testConstraint darwin]}]
testConstraint installkitVersionDefined [info exists ::env(INSTALLKIT_VERSION)]

test content-1 {check installkit version} -constraints installkitVersionDefined -body {
    string equal [package require installkit $::env(INSTALLKIT_VERSION)] $::env(INSTALLKIT_VERSION)
} -result 1

foreach { pkgName pkgVersion constraints } {
    Tcl                 8.6.14 {}
    Tk                  8.6.14 {}
    Ttk                 8.6.14 {}
    http                2.9.8  {}
    Thread              2.8.9  {win}
    msgcat              1.6.1  {}
    registry            1.3.5  {win}
    Tktable             2.11.1 {}
    twapi               4.7.2  {win}
    Ffidl               0.8    {win}
    tkdnd               2.9.4  {}
    ttk::theme::jammer  0.1    {}
    vfs                 1.4.2  {}
    vfs::cookfs         1.4.0  {}
    installkit::Windows 1.1    {win}
} {
    test content-3.[incr count] [list package require $pkgName $pkgVersion] \
        -constraints $constraints \
        -body [list package require $pkgName $pkgVersion] \
        -returnCodes ok -match glob -result *
}
unset count

# installkit expects twapi/ffidl packages in specific locations

test content-4.1  {Check twapi package location} -constraints win -setup {
    set ij_libpath [file join [file dirname [interpreter]] .. lib]
} -body {
    file exists [file join $ij_libpath twapi]
} -result 1 -cleanup {
    unset ij_libpath
}

test content-4.2 {Check ffidl package location} -constraints win -setup {
    set ij_libpath [file join [file dirname [interpreter]] .. lib]
} -body {
    file exists [file join $ij_libpath ffidl]
} -result 1 -cleanup {
    unset ij_libpath
}

# installkit removed encoding files lager than 4096 bytes.
# Here we check that vfs contains expected set of encodings.

test content-5 {
    available encodings
} -body {
    set encs [list]
    foreach enc [lsort [glob -directory /installkitvfs/lib/tcl[info tclversion]/encoding -type f -tails "*.enc"]] {
        lappend encs [file rootname $enc]
    }
    set encs
} -result [list {*}{ascii cp1250 cp1251 cp1252 cp1253 cp1254 cp1255
cp1256 cp1257 cp1258 cp437 cp737 cp775 cp850 cp852 cp855 cp857 cp860
cp861 cp862 cp863 cp864 cp865 cp866 cp869 cp874 dingbats ebcdic gb1988
iso2022-jp iso2022-kr iso2022 iso8859-1 iso8859-10 iso8859-11 iso8859-13
iso8859-14 iso8859-15 iso8859-16 iso8859-2 iso8859-3 iso8859-4 iso8859-5
iso8859-6 iso8859-7 iso8859-8 iso8859-9 jis0201 koi8-r koi8-u macCentEuro
macCroatian macCyrillic macDingbats macGreek macIceland macRoman macRomania
macThai macTurkish macUkraine symbol tis-620}] -cleanup {
    unset -nocomplain encs enc
}

test content-6 {icon exists} -constraints win -body {
    file exists /installkitvfs/installkit.ico
} -result 1

# cleanup
::tcltest::cleanupTests
return
