#!/bin/sh

help ( ) {
  echo "configure commands available:"
  echo ""
  echo "--help                 displays this page"
  echo "--enable-threads       Enable thread support"
  echo "--prefix=[PREFIX]      use PREFIX as install directory"
  echo "--with-lzma-src=[DIR]  the directory where the LzmaC source is located"
  echo "--with-miniarc-src=[DIR]   the directory where the miniarc source is located"
  echo "--with-tcl=[DIR]       the directory where tclConfig.sh is located"
  echo "--with-tk=[DIR]        the directory where tkConfig.sh is located"
  echo "--with-zlib=[DIR]      the directory where zlib is located"
  echo "--with-zip=[FILE]      the location of the zip program binary"
  echo "--without-upx          Do not compress installkit with UPX (Linux only)"
  echo
  exit 0
}

ABS_TOP_BUILDDIR=`/bin/pwd`

TOP_SRCDIR=`dirname "$0"`
ABS_TOP_SRCDIR=`cd "$TOP_SRCDIR" && /bin/pwd`

ZIP=`which zip`
PLATFORM=`uname`
BUILD="shared"
UPX=`which upx`

if test -f "$UPX"; then
  UPX="$UPX --lzma"
else
  UPX="echo"
fi

LZMA_SRCDIR=/no-lzma-src
MINIARC_SRCDIR=/no-miniarc-src
TKDIR=../../lib
TCLDIR=../../lib
ZLIBDIR=../..

for i in $@
do
  case $i in
  --help) help ;;
  --prefix=*)      PREFIX=`echo $i | sed -e 's/^[^=]*=//g'` ;;
  --without-upx)   WITH_UPX=no ;;
  --with-lzma-src=*) LZMA_SRCDIR=`echo $i | sed -e 's/^[^=]*=//g'` ;;
  --with-miniarc-src=*) MINIARC_SRCDIR=`echo $i | sed -e 's/^[^=]*=//g'` ;;
  --with-tcl=*)    TCLDIR=`echo $i | sed -e 's/^[^=]*=//g'` ;;
  --with-tk=*)     TKDIR=`echo $i | sed -e 's/^[^=]*=//g'` ;;
  --with-zlib=*)   ZLIBDIR=`echo $i | sed -e 's/^[^=]*=//g'` ;;
  *) echo "Invalid configure option $i" ; help ; exit 1 ;;
  esac
done

if test -f $TCLDIR/tclConfig.sh; then
  TCLCONFIG=$TCLDIR/tclConfig.sh

  . ${TCLCONFIG}

  ## If they gave us --with-tcl but no --with-tk, see if tkConfig is in the
  ## same directory.
  if test -f $TCLDIR/tkConfig.sh -a -z "$TKDIR"; then
    TKDIR=$TCLDIR
  fi

else
  echo "Unable to locate tclConfig.sh.  Please specify --with-tcl"
  exit 1
fi

if test -f $TKDIR/tkConfig.sh; then
  TKCONFIG=$TKDIR/tkConfig.sh
else
  echo "Unable to locate tkConfig.sh.  Please specify --with-tk"
  exit 1
fi

TKVERSION=8.6
TCLVERSION=8.6
THREADVERSION=2.6.6

TKVERSION_NODOT=`echo $TKVERSION | tr -d .`
TCLVERSION_NODOT=`echo $TCLVERSION | tr -d .`
THREADVERSION_NODOT=`echo $THREADVERSION | tr -d .`

TKVERSION_DIR=$TKVERSION
TKVERSION_LIB=$TKVERSION

TCLVERSION_DIR=$TCLVERSION
TCLVERSION_LIB=$TCLVERSION

THREADVERSION_DIR=$THREADVERSION
THREADVERSION_LIB=$THREADVERSION

MINIARCVERSION_DIR=$MINIARCVERSION
MINIARCVERSION_LIB=$MINIARCVERSION

case $PLATFORM in
  CYGWIN_NT*|MINGW*)
        TCLSH_NAME=tclsh${TCLVERSION_NODOT}s.exe

        MAKEFILE=win/Makefile.in

        TKVERSION_LIB=$TKVERSION_NODOT
        TCLVERSION_LIB=$TCLVERSION_NODOT
        THREADVERSION_LIB=$THREADVERSION_NODOT
        MINIARCVERSION_LIB=$MINIARCVERSION_NODOT
        ;;
  *)
        TCLSH_NAME=tclsh$TCLVERSION

        MAKEFILE=unix/Makefile.in

	LIB_PREFIX="lib"

        if test "x${TCL_LIB_VERSIONS_OK}" = "xnodots"; then
          TKVERSION_LIB=$TKVERSION_NODOT
          TCLVERSION_LIB=$TCLVERSION_NODOT
          THREADVERSION_LIB=$THREADVERSION_NODOT
          MINIARCVERSION_LIB=$MINIARCVERSION_NODOT
        fi

        ;;
esac

OBJS="crap.o crapvfs.o miniarc.o sha1.o LZMADecode.o installkit.o main.o zlib.o zvfs.o Alloc.o LzFind.o LzmaEnc.o"

case $PLATFORM in
  MINGW*)
        OBJS="$OBJS tclXcmds.o tclXutil.o tclXwinOS.o"
        ;;
  *)
        OBJS="$OBJS tclXcmds.o tclXutil.o tclXunixId.o tclXunixOS.o"
        ;;
esac

TARGETS="\$(PROG)"

## Setup dynamic options.
DYNAMIC_LFLAGS="-lc -lm -L/usr/X11/lib -L/usr/X11R6/lib"

case $PLATFORM in
  CYGWIN_NT*|MINGW*)
        MAIN="winMain"

        BUILD="static"

        TARGETS="\$(PROG).exe \$(PROG)U.exe \$(PROG)A.exe \$(PROG)UA.exe"

	DYNAMIC_LIBS="\$(TCL_PREFIX)/lib/reg1.3/libtclreg13.a \$(TK_LIBS)\
            -luuid -lrpcrt4 -mwindows"
	DYNAMIC_LFLAGS=""

	EXE=".exe"

        if test -f /c/Progra~1/Bitsum~1/Pecomp~1/PEC2.exe; then
            UPX="/c/Progra~1/Bitsum~1/Pecomp~1/PEC2.exe /NoBackup /Ko:N /Ri:No"
        fi

	EXTRA_LIBS="\$(LIB_THREAD)"
	EXTRA_INCLUDES="-DTCL_THREADS"
	;;

  Linux)
	DYNAMIC_LFLAGS="$DYNAMIC_LFLAGS -rdynamic -ldl"
	;;

  *BSD)
	DYNAMIC_LFLAGS="$DYNAMIC_LFLAGS -rdynamic"
        ;;

  SunOS)
	DYNAMIC_LFLAGS="$DYNAMIC_LFLAGS -ldl -lsocket -lnsl -lresolv"
        ;;

  Darwin)
	DYNAMIC_CFLAGS="$CFLAGS"
	DYNAMIC_LFLAGS="$DYNAMIC_LFLAGS -framework CoreFoundation"
	DYNAMIC_LFLAGS="$DYNAMIC_LFLAGS -framework Carbon"
	DYNAMIC_LFLAGS="$DYNAMIC_LFLAGS $DYNAMIC_CFLAGS"
        ;;

  *)
        ;;
esac

sed -e s/\'//g $TCLCONFIG > tclConfig.sh
sed -e s/\'//g $TKCONFIG > tkConfig.sh

cat > Makefile << EOF
##
## Makefile
##
## Created with $0 $@
##

TOP_SRCDIR = $ABS_TOP_SRCDIR

PREFIX = $PREFIX
EXE    = $EXE

## The package versions we are using.
TKVERSION_DIR=$TKVERSION_DIR
TKVERSION_LIB=$TKVERSION_LIB

TCLVERSION_DIR=$TCLVERSION_DIR
TCLVERSION_LIB=$TCLVERSION_LIB

THREADVERSION_DIR=$THREADVERSION_DIR
THREADVERSION_LIB=$THREADVERSION_LIB

MINIARCVERSION_DIR=$MINIARCVERSION_DIR
MINIARCVERSION_LIB=$MINIARCVERSION_LIB

LZMA_SRCDIR=$LZMA_SRCDIR
MINIARC_SRCDIR=$MINIARC_SRCDIR

ZLIB_PREFIX=$ZLIBDIR


## Name of the UPX binary
UPX = $UPX

## Name of the tclsh binary
TCLSH_NAME     = $TCLSH_NAME

## Dynamic configuration.
LIB_PREFIX     = $LIB_PREFIX
DYNAMIC_LIBS   = $DYNAMIC_LIBS
DYNAMIC_LFLAGS = $DYNAMIC_LFLAGS
DYNAMIC_CFLAGS = $DYNAMIC_CFLAGS

MAIN           = $MAIN
BUILD          = $BUILD
TARGETS        = $TARGETS

OBJS           = $OBJS

EXTRA_LIBS     = $EXTRA_LIBS
EXTRA_INCLUDES = $EXTRA_INCLUDES
EOF

cat "$TOP_SRCDIR/$MAKEFILE" >> Makefile
cat "$TOP_SRCDIR/Makefile.in" >> Makefile
