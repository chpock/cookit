# cookit tests - check binary dependencies
#
# Copyright (C) 2024 Konstantin Kushnir <chpock@gmail.com>
#
# See the file "license.terms" for information on usage and redistribution of
# this file, and for a DISCLAIMER OF ALL WARRANTIES.

if { [lsearch [namespace children] ::tcltest] == -1 } {
    package require tcltest 2
    namespace import -force ::tcltest::*
}

source [file join [tcltest::testsDirectory] .. helper.tcl]

set platform [lindex [file split [info nameofexecutable]] end-2]

# Known platforms:
#   i686-pc-linux-gnu
#   x86_64-w64-mingw32
#   i686-pc-linux-gnu
#   x86_64-pc-linux-gnu
#   i386-apple-darwin10.6

set expected [dict create {*}{
    i686-pc-linux-gnu {
        cookit-deps {
            cookit-gui_raw {
                /lib/ld-linux.so.2
                libc.so.6
                libdl.so.2
                libm.so.6
                libpthread.so.0
                librt.so.1
                linux-gate.so.1
            }
            cookit8-gui_raw {
                /lib/ld-linux.so.2
                libc.so.6
                libdl.so.2
                libm.so.6
                libpthread.so.0
                librt.so.1
                linux-gate.so.1
            }
            libtk*.so {
                /lib/ld-linux.so.2
                libX11.so.6
                libXau.so.6
                libc.so.6
                libdl.so.2
                libm.so.6
                libpthread.so.0
                libxcb.so.1
                linux-gate.so.1
            }
            libtcl9tk*.so {
                /lib/ld-linux.so.2
                libX11.so.6
                libXau.so.6
                libc.so.6
                libdl.so.2
                libm.so.6
                libpthread.so.0
                libxcb.so.1
                linux-gate.so.1
            }
        }
        cookit-glibc {
            cookit-gui_raw  { 2.11 2.9 2.7 2.3.2 2.3 2.2 2.1.2 2.1 2.0 }
            cookit8-gui_raw { 2.11 2.7 2.3.2 2.3 2.2 2.1.2 2.1 2.0 }
            libtk*.so       { 2.7 2.3 2.1.3 2.1 2.0 }
            libtcl9tk*.so   { 2.7 2.3 2.1.3 2.1 2.0 }
        }
    }
    x86_64-pc-linux-gnu {
        cookit-deps {
            cookit-gui_raw {
                /lib64/ld-linux-x86-64.so.2
                libc.so.6
                libdl.so.2
                libm.so.6
                libpthread.so.0
                librt.so.1
                linux-vdso.so.1
            }
            cookit8-gui_raw {
                /lib64/ld-linux-x86-64.so.2
                libc.so.6
                libdl.so.2
                libm.so.6
                libpthread.so.0
                librt.so.1
                linux-vdso.so.1
            }
            libtk*.so {
                /lib64/ld-linux-x86-64.so.2
                libX11.so.6
                libXau.so.6
                libc.so.6
                libdl.so.2
                libm.so.6
                libpthread.so.0
                libxcb.so.1
                linux-vdso.so.1
            }
            libtcl9tk*.so {
                /lib64/ld-linux-x86-64.so.2
                libX11.so.6
                libXau.so.6
                libc.so.6
                libdl.so.2
                libm.so.6
                libpthread.so.0
                libxcb.so.1
                linux-vdso.so.1
            }
        }
        cookit-glibc {
            cookit-gui_raw  { 2.11 2.9 2.7 2.3.2 2.3 2.2.5 }
            cookit8-gui_raw { 2.11 2.7 2.3.2 2.3 2.2.5 }
            libtk*.so       { 2.7 2.3 2.2.5 }
            libtcl9tk*.so   { 2.7 2.3 2.2.5 }
        }
    }
    i386-apple-darwin10.10 {
        cookit-deps {
            cookit-gui_raw {
                /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation
                /System/Library/Frameworks/Security.framework/Versions/A/Security
                /usr/lib/libSystem.B.dylib
            }
            cookit8-gui_raw {
                /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation
                /System/Library/Frameworks/Security.framework/Versions/A/Security
                /usr/lib/libSystem.B.dylib
            }
            libtk*.dylib   {
                /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
                /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices
                /System/Library/Frameworks/Carbon.framework/Versions/A/Carbon
                /System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa
                /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation
                /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices
                /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
                /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
                /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore
                /usr/lib/libSystem.B.dylib
                /usr/lib/libobjc.A.dylib
            }
            libtcl9tk*.dylib   {
                /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
                /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices
                /System/Library/Frameworks/Carbon.framework/Versions/A/Carbon
                /System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa
                /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation
                /system/library/frameworks/coregraphics.framework/versions/a/coregraphics
                /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices
                /system/library/frameworks/coretext.framework/versions/a/coretext
                /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
                /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
                /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore
                /system/library/frameworks/security.framework/versions/a/security
                /usr/lib/libSystem.B.dylib
                /usr/lib/libobjc.A.dylib
            }
        }
    }
    x86_64-apple-darwin10.10 {
        cookit-deps {
            cookit-gui_raw {
                /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation
                /System/Library/Frameworks/Security.framework/Versions/A/Security
                /usr/lib/libSystem.B.dylib
            }
            cookit8-gui_raw {
                /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation
                /System/Library/Frameworks/Security.framework/Versions/A/Security
                /usr/lib/libSystem.B.dylib
            }
            libtk*.dylib   {
                /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
                /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices
                /System/Library/Frameworks/Carbon.framework/Versions/A/Carbon
                /System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa
                /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation
                /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices
                /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
                /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
                /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore
                /usr/lib/libSystem.B.dylib
                /usr/lib/libobjc.A.dylib
            }
            libtcl9tk*.dylib   {
                /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
                /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices
                /System/Library/Frameworks/Carbon.framework/Versions/A/Carbon
                /System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa
                /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation
                /system/library/frameworks/coregraphics.framework/versions/a/coregraphics
                /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices
                /system/library/frameworks/coretext.framework/versions/a/coretext
                /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
                /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
                /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore
                /system/library/frameworks/security.framework/versions/a/security
                /usr/lib/libSystem.B.dylib
                /usr/lib/libobjc.A.dylib
            }
        }
    }
    i686-w64-mingw32 {
        cookit-deps {
            cookit-gui_raw.exe {
                ADVAPI32.dll
                COMCTL32.DLL
                COMDLG32.DLL
                CRYPT32.dll
                GDI32.dll
                IMM32.DLL
                IPHLPAPI.DLL
                KERNEL32.dll
                MPR.DLL
                NETAPI32.dll
                OLEAUT32.dll
                POWRPROF.dll
                PSAPI.DLL
                RPCRT4.dll
                SETUPAPI.dll
                SHELL32.dll
                SHLWAPI.dll
                Secur32.dll
                USER32.dll
                USERENV.dll
                UxTheme.dll
                VERSION.dll
                WINMM.DLL
                WINSPOOL.DRV
                WINTRUST.dll
                WS2_32.dll
                WTSAPI32.dll
                bcrypt.dll
                credui.dll
                msvcrt.dll
                ole32.dll
                pdh.dll
                tdh.dll
            }
            cookit8-gui_raw.exe {
                ADVAPI32.dll
                COMCTL32.DLL
                COMDLG32.DLL
                CRYPT32.dll
                GDI32.dll
                IMM32.DLL
                IPHLPAPI.DLL
                KERNEL32.dll
                MPR.DLL
                NETAPI32.dll
                OLEAUT32.dll
                POWRPROF.dll
                PSAPI.DLL
                RPCRT4.dll
                SETUPAPI.dll
                SHELL32.dll
                SHLWAPI.dll
                Secur32.dll
                USER32.dll
                USERENV.dll
                UxTheme.dll
                VERSION.dll
                WINMM.DLL
                WINSPOOL.DRV
                WINTRUST.dll
                WS2_32.dll
                WTSAPI32.dll
                bcrypt.dll
                credui.dll
                msvcrt.dll
                ole32.dll
                pdh.dll
                tdh.dll
            }
        }
    }
    x86_64-w64-mingw32 {
        cookit-deps {
            cookit-gui_raw.exe {
                ADVAPI32.dll
                COMCTL32.DLL
                CRYPT32.dll
                GDI32.dll
                IMM32.DLL
                IPHLPAPI.DLL
                KERNEL32.dll
                MPR.DLL
                NETAPI32.dll
                OLEAUT32.dll
                POWRPROF.dll
                PSAPI.DLL
                RPCRT4.dll
                SETUPAPI.dll
                SHELL32.dll
                SHLWAPI.dll
                Secur32.dll
                USER32.dll
                USERENV.dll
                UxTheme.dll
                VERSION.dll
                WINMM.DLL
                WINSPOOL.DRV
                WINTRUST.dll
                WS2_32.dll
                WTSAPI32.dll
                bcrypt.dll
                COMDLG32.DLL
                credui.dll
                msvcrt.dll
                ole32.dll
                pdh.dll
                tdh.dll
            }
            cookit8-gui_raw.exe {
                ADVAPI32.dll
                COMCTL32.DLL
                CRYPT32.dll
                GDI32.dll
                IMM32.DLL
                IPHLPAPI.DLL
                KERNEL32.dll
                MPR.DLL
                NETAPI32.dll
                OLEAUT32.dll
                POWRPROF.dll
                PSAPI.DLL
                RPCRT4.dll
                SETUPAPI.dll
                SHELL32.dll
                SHLWAPI.dll
                Secur32.dll
                USER32.dll
                USERENV.dll
                UxTheme.dll
                VERSION.dll
                WINMM.DLL
                WINSPOOL.DRV
                WINTRUST.dll
                WS2_32.dll
                WTSAPI32.dll
                bcrypt.dll
                COMDLG32.DLL
                credui.dll
                msvcrt.dll
                ole32.dll
                pdh.dll
                tdh.dll
            }
        }
    }
}]

set setup_load_deps [list apply {{ file {var deps} } {
    upvar 1 $var deps
    set deps [dict create]
    set fp [open [file join [file dirname [info nameofexecutable]] .. $file] r]
    while { [gets $fp line] != -1 } {
        set line [split $line " "]
        dict set deps [lindex $line 0] [lindex $line 1] [join [lrange $line 2 end] " "]
    }
    close $fp
}}]

set expected [list apply {{ platform expected prefix1 prefix2 type } {
    if { ![dict exists $expected $platform $type] } { return "" }
    set result [list]
    dict for { k v } [dict get $expected $platform $type] {
        if { [string match "cookit*" $k] && ![string match "${prefix1}-*" $k] && ![string match "${prefix1}_*" $k] } continue
        if { [string match "lib*" $k] && ![string match "${prefix2}*" $k] } continue
        lappend result "$k [string tolower [join $v { }]]"
    }
    return [join $result \n]
}} $platform $expected "cookit[expr { $::tcl_version < 9.0 ? 8 : "" }]" "lib[expr { $::tcl_version < 9.0 ? "" : "tcl9" }]tk"]

test cookit-deps-cookit-deps {cookit dependencies} -setup [concat \
    $setup_load_deps \
    cookit[expr { $::tcl_version < 9.0 ? 8 : "" }]-gui-deps.txt \
] -body {
    set result [list]
    dict for { exe data } $deps {
        dict for { type data } $data {
            if { $type ne "DEPS" } continue
            lappend result "$exe [string tolower $data]"
        }
    }
    join $result \n
} -match glob -result [{*}$expected cookit-deps] -cleanup {
    unset deps
}

test cookit-deps-cookit-glibc {cookit GLIBC requirement} -constraints linuxOnly -setup [concat \
    $setup_load_deps \
    cookit[expr { $::tcl_version < 9.0 ? 8 : "" }]-gui-deps.txt \
] -body {
    set result [list]
    dict for { exe data } $deps {
        dict for { type data } $data {
            if { $type ne "GLIBC" } continue
            lappend result "$exe $data"
        }
    }
    join $result \n
} -match glob -result [{*}$expected cookit-glibc] -cleanup {
    unset deps
}

test cookit-deps-cookit-rpath {cookit RPATH} -constraints unix -setup [concat \
    $setup_load_deps \
    cookit[expr { $::tcl_version < 9.0 ? 8 : "" }]-gui-deps.txt \
] -body {
    set result [list]
    dict for { exe data } $deps {
        dict for { type data } $data {
            if { $type ne "RPATH" } continue
            if { $data eq "None" } continue
            lappend result "$exe $data"
        }
    }
    join $result \n
} -match glob -result "" -cleanup {
    unset deps
}

# cleanup
::tcltest::cleanupTests
return
