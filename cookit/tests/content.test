# cookit tests - content
#
# Copyright (C) 2024 Konstantin Kushnir <chpock@gmail.com>
#
# See the file "license.terms" for information on usage and redistribution of
# this file, and for a DISCLAIMER OF ALL WARRANTIES.

# These tests check the expected content in cookit vfs

if { [lsearch [namespace children] ::tcltest] == -1 } {
    package require tcltest 2
    namespace import -force ::tcltest::*
}

lappend auto_path [file join [file dirname [info nameofexecutable]] .. lib]

testConstraint darwin [expr {[testConstraint unix] && $tcl_platform(os) eq "Darwin"}]
testConstraint notDarwin [expr {![testConstraint darwin]}]
testConstraint cookitVersionDefined [info exists ::env(COOKIT_VERSION)]

test content-1 {check cookit version} -constraints cookitVersionDefined -body {
    string equal [package require cookit $::env(COOKIT_VERSION)] $::env(COOKIT_VERSION)
} -result 1

foreach { pkgName pkgVersion constraints } {
    Tcl                 8.6.14 {}
    Tk                  8.6.14 {}
    Ttk                 8.6.14 {}
    http                2.9.8  {}
    https               0.1.0  {}
    Thread              2.8.9  {}
    msgcat              1.6.1  {}
    registry            1.3.5  {win}
    twapi               4.7.2  {win}
    vfs                 1.4.2  {}
    cookfs              1.6.0  {}
} {
    test content-3.[incr count] [list package require $pkgName $pkgVersion] \
        -constraints $constraints \
        -body [list package require $pkgName $pkgVersion] \
        -returnCodes ok -match glob -result *
}
unset count

test content-6 {icon exists} -constraints win -body {
    file exists /cookit/cookit.ico
} -result 1

# cleanup
::tcltest::cleanupTests
return
